
CREATE GENERATOR GEN_ADRES_ID;
CREATE GENERATOR GEN_ARTIKEL_ID;
CREATE GENERATOR GEN_BESTELLING_ID;
CREATE GENERATOR GEN_KLANT_ID;
/******************** DOMAINS *********************/

CREATE DOMAIN SEC$KEY
 AS Varchar(10) CHARACTER SET UNICODE_FSS
 NOT NULL
 COLLATE UNICODE_FSS;
CREATE DOMAIN SEC$NAME_PART
 AS Varchar(10) CHARACTER SET UNICODE_FSS
 NOT NULL
 COLLATE UNICODE_FSS;
CREATE DOMAIN SEC$USER_NAME
 AS Varchar(10) CHARACTER SET UNICODE_FSS
 NOT NULL
 COLLATE UNICODE_FSS;
CREATE DOMAIN SEC$VALUE
 AS Varchar(85) CHARACTER SET UNICODE_FSS
 NOT NULL
 COLLATE UNICODE_FSS;
/******************* PROCEDURES ******************/

/******************** TABLES **********************/

CREATE TABLE ADRES
(
  ADRES_ID Integer NOT NULL,
  STRAATNAAM Varchar(26) NOT NULL,
  POSTCODE Varchar(6),
  TOEVOEGING Varchar(6),
  HUISNUMMER Integer NOT NULL,
  WOONPLAATS Varchar(26) NOT NULL,
  CONSTRAINT ADRES_ID PRIMARY KEY (ADRES_ID),
  CONSTRAINT UNQ_ADRES_1 UNIQUE (POSTCODE,TOEVOEGING,HUISNUMMER)
);
CREATE TABLE ARTIKEL
(
  ARTIKEL_ID Integer NOT NULL,
  ARTIKEL_NAAM Char(25),
  ARTIKEL_PRIJS Integer,
  CONSTRAINT ARTIKEL_ID PRIMARY KEY (ARTIKEL_ID)
);
CREATE TABLE BESTELLING
(
  BESTELLING_ID Integer NOT NULL,
  KLANT_KLANT_ID Integer NOT NULL,
  CONSTRAINT BESTELLING_ID PRIMARY KEY (BESTELLING_ID)
);
CREATE TABLE BESTELLING_HAS_ARTIKEL
(
  BESTELLING_BESTELLING_ID Integer NOT NULL,
  ARTIKEL_ARTIKEL_ID Integer NOT NULL,
  AANTAL_ARTIKELEN Integer NOT NULL
);
CREATE TABLE KLANT
(
  KLANT_ID Integer NOT NULL,
  VOORNAAM Varchar(51) NOT NULL,
  ACHTERNAAM Varchar(52) NOT NULL,
  TUSSENVOEGSEL Varchar(12),
  EMAIL Varchar(80),
  CONSTRAINT KLANT_ID PRIMARY KEY (KLANT_ID)
);
CREATE TABLE KLANT_HAS_ADRES
(
  KLANT_KLANT_ID Integer NOT NULL,
  ADRES_ADRES_ID Integer NOT NULL
);
/********************* VIEWS **********************/

/******************* EXCEPTIONS *******************/

/******************** TRIGGERS ********************/


ALTER TABLE BESTELLING ADD CONSTRAINT FK_BESTELLING_1
  FOREIGN KEY (KLANT_KLANT_ID) REFERENCES KLANT (KLANT_ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE BESTELLING_HAS_ARTIKEL ADD CONSTRAINT ARTIKEL_ARTIKEL_ID
  FOREIGN KEY (ARTIKEL_ARTIKEL_ID) REFERENCES ARTIKEL (ARTIKEL_ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE BESTELLING_HAS_ARTIKEL ADD CONSTRAINT BESTELLING_BESTELLING_ID
  FOREIGN KEY (BESTELLING_BESTELLING_ID) REFERENCES BESTELLING (BESTELLING_ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE KLANT_HAS_ADRES ADD CONSTRAINT ADRES_ADRES_ID
  FOREIGN KEY (ADRES_ADRES_ID) REFERENCES ADRES (ADRES_ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE KLANT_HAS_ADRES ADD CONSTRAINT KLANT_KLANT_ID
  FOREIGN KEY (KLANT_KLANT_ID) REFERENCES KLANT (KLANT_ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ADRES TO  Hallo WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTIKEL TO  Hallo WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BESTELLING TO  Hallo WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BESTELLING_HAS_ARTIKEL TO  Hallo WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON KLANT TO  Hallo WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON KLANT_HAS_ADRES TO  Hallo WITH GRANT OPTION;


SET TERM ^ ;
CREATE TRIGGER ADRES_BI FOR ADRES ACTIVE
BEFORE insert POSITION 0
AS 
BEGIN 
    if (NEW.ADRES_ID is NULL) then NEW.ADRES_ID = GEN_ID(GEN_ADRES_ID, 1);
END^
CREATE TRIGGER ARTIKEL_BI FOR ARTIKEL ACTIVE
BEFORE insert POSITION 0
AS 
BEGIN 
    if (NEW.ARTIKEL_ID is NULL) then NEW.ARTIKEL_ID = GEN_ID(GEN_artikel_id, 1);
END^
CREATE TRIGGER BESTELLING_BI FOR BESTELLING ACTIVE
BEFORE insert POSITION 0
AS 
BEGIN 
    if (NEW.bestelling_id is NULL) then NEW.bestelling_id = GEN_ID(GEN_bestelling_id, 1);
END^
CREATE TRIGGER KLANT_BI FOR KLANT ACTIVE
BEFORE insert POSITION 0
AS 
BEGIN 
    if (NEW.KLANT_ID is NULL) then NEW.KLANT_ID = GEN_ID(GEN_KLANT_ID, 1);
END^
SET TERM ; ^


